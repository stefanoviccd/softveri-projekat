/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package rs.ac.bg.fon.ps.bibliotekaklijent.view;

import rs.ac.bg.fon.ps.biblioteka.model.User;
import rs.ac.bg.fon.ps.biblioteka.model.UserCard;
import rs.ac.bg.fon.ps.biblioteka.model.UserCategory;
import rs.ac.bg.fon.ps.bibliotekaklijent.validation.ValidationException;
import rs.ac.bg.fon.ps.bibliotekaklijent.validation.Validator;
import rs.ac.bg.fon.ps.bibliotekaklijent.view.tableModel.TableModelUser;
import java.sql.SQLException;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import rs.ac.bg.fon.ps.biblioteka.bibilotekaklijent.controller.ControllerUI;
import rs.ac.bg.fon.ps.biblioteka.model.Rent;
import rs.ac.bg.fon.ps.bibliotekaklijent.view.tableModel.TableModelUserRents;

/**
 *
 * @author Dragana Stefanovic
 */
public class FrmChangeUserInfo extends javax.swing.JDialog {

    private User user;
    private JTable table;

    /**
     * Creates new form FrmDodajClana
     */
    public FrmChangeUserInfo(java.awt.Frame parent, boolean modal, User u, JTable table) {
        super(parent, modal);
        this.user = u;
        this.table = table;
        initComponents();
        setTitle("Informacije o korisniku");
        tblIznajmljeneKnjige.setModel((new TableModelUserRents(new ArrayList())));
        FrameCenter.CenteredFrame(this);
        try {
            prepareForm();
            JOptionPane.showMessageDialog(this, "Sistem je učitao člana!");

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Sistem ne moze da ucita clana!" + ex.getMessage(), "Greska", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtIme = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtPrez = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtTelefon = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtAdresa = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        cmbKategorija = new javax.swing.JComboBox();
        btnGenerisi = new javax.swing.JButton();
        txtBrojClanskeKarte = new javax.swing.JTextField();
        btnSacuvaj = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        btnOtkazi = new javax.swing.JButton();
        btnIzmeni = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblIznajmljeneKnjige = new javax.swing.JTable();
        btnRazduzi = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBounds(new java.awt.Rectangle(100, 100, 0, 0));

        jLabel1.setText("Podaci o clanu");

        jLabel2.setText("Ime");

        txtIme.setEditable(false);

        jLabel3.setText("Prezime");

        txtPrez.setEditable(false);

        jLabel4.setText("Kontakt telefon");

        txtTelefon.setEditable(false);

        jLabel5.setText("Adresa");

        txtAdresa.setEditable(false);

        jLabel6.setText("Izaberi kategoriju");

        cmbKategorija.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbKategorija.setEnabled(false);

        btnGenerisi.setText("Generisi broj clanske karte");
        btnGenerisi.setEnabled(false);
        btnGenerisi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerisiActionPerformed(evt);
            }
        });

        txtBrojClanskeKarte.setEditable(false);

        btnSacuvaj.setText("Sacuvaj izmene");
        btnSacuvaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSacuvajActionPerformed(evt);
            }
        });

        jLabel7.setForeground(new java.awt.Color(153, 153, 153));
        jLabel7.setText("<Ulica Broj, Postanski_broj Grad>");

        btnOtkazi.setText("Otkazi");
        btnOtkazi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOtkaziActionPerformed(evt);
            }
        });

        btnIzmeni.setText("Izmeni");
        btnIzmeni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIzmeniActionPerformed(evt);
            }
        });

        tblIznajmljeneKnjige.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblIznajmljeneKnjige);

        btnRazduzi.setText("Razduzi");
        btnRazduzi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRazduziActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnSacuvaj, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnRazduzi, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtIme, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtPrez, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtTelefon, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(cmbKategorija, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtAdresa, javax.swing.GroupLayout.DEFAULT_SIZE, 234, Short.MAX_VALUE)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addComponent(btnGenerisi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtBrojClanskeKarte))
                        .addGap(37, 37, 37)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnIzmeni, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnOtkazi, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(51, 51, 51)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 407, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(btnIzmeni))
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtIme, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtPrez, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtTelefon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtAdresa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(1, 1, 1)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cmbKategorija, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(btnGenerisi)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtBrojClanskeKarte, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnOtkazi)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSacuvaj)
                    .addComponent(btnRazduzi))
                .addContainerGap(35, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnGenerisiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerisiActionPerformed
        String cardNumber = "";
        Random rand = new Random();
        for (int i = 0; i < 15; i++) {

            cardNumber += rand.nextInt(9);
        }
        txtBrojClanskeKarte.setText(cardNumber);
    }//GEN-LAST:event_btnGenerisiActionPerformed

    private void btnSacuvajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSacuvajActionPerformed

        if (btnGenerisi.isEnabled()) {
            try {
                validateInputs();
                //User oldUser=user;

                //user=new User();
                User newUser = new User();

                newUser.setName(txtIme.getText());
                newUser.setLastName(txtPrez.getText());
                newUser.setPhoneNumber(txtTelefon.getText());
                newUser.setAddress(txtAdresa.getText());
                newUser.setUserCategory((UserCategory) cmbKategorija.getSelectedItem());
                UserCard userCard = new UserCard();
                if (!(txtBrojClanskeKarte.getText().trim().equals(user.getUsercard().getCardNumber()))) {
                    userCard.setCardNumber(txtBrojClanskeKarte.getText().trim());
                    userCard.setIssueDate(LocalDate.now());
                    userCard.setExpiryDate(userCard.getIssueDate().plusYears(1));
                    newUser.setUsercard(userCard);
               

                }
                newUser.setUserId(user.getUserId());
                ControllerUI.getInstance().updateUser(user, newUser);
                // user=newUser;

                ((TableModelUser) table.getModel()).setUsers(ControllerUI.getInstance().getUsers());

                JOptionPane.showMessageDialog(this, "Sistem je zapamtio člana!");
            } catch (ValidationException ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage(), "Nepravilan unos", JOptionPane.ERROR_MESSAGE);
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage(), "Greska", JOptionPane.ERROR_MESSAGE);
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage(), "Greska", JOptionPane.ERROR_MESSAGE);

            }
        }
    }//GEN-LAST:event_btnSacuvajActionPerformed

    private void btnOtkaziActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOtkaziActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnOtkaziActionPerformed

    private void btnIzmeniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIzmeniActionPerformed
        txtIme.setEditable(true);
        txtPrez.setEditable(true);
        txtTelefon.setEditable(true);
        txtAdresa.setEditable(true);
        btnGenerisi.setEnabled(true);
        cmbKategorija.setEnabled(true);

    }//GEN-LAST:event_btnIzmeniActionPerformed

    private void btnRazduziActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRazduziActionPerformed
        int selectedRow = tblIznajmljeneKnjige.getSelectedRow();
        if (selectedRow != -1) {
            Rent rent = ((TableModelUserRents) tblIznajmljeneKnjige.getModel()).getRent(selectedRow);
            if (rent.getReturnDate() != null) {
                JOptionPane.showMessageDialog(this, "Knjiga je prethodno razdužena.");
            } else {
                try {
                    ControllerUI.getInstance().restoreBook(rent);
                    JOptionPane.showMessageDialog(this, "Uspešno ste razdužili knjigu.");
                    ((TableModelUserRents) tblIznajmljeneKnjige.getModel()).getRent(selectedRow).setReturnDate(LocalDate.now());
                    ((TableModelUserRents) tblIznajmljeneKnjige.getModel()).fireTableDataChanged();

                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(this, "Neuspešno razduživanje knjige.", "Error", JOptionPane.ERROR_MESSAGE);
                }
            }

        }
    }//GEN-LAST:event_btnRazduziActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGenerisi;
    private javax.swing.JButton btnIzmeni;
    private javax.swing.JButton btnOtkazi;
    private javax.swing.JButton btnRazduzi;
    private javax.swing.JButton btnSacuvaj;
    private javax.swing.JComboBox cmbKategorija;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblIznajmljeneKnjige;
    private javax.swing.JTextField txtAdresa;
    private javax.swing.JTextField txtBrojClanskeKarte;
    private javax.swing.JTextField txtIme;
    private javax.swing.JTextField txtPrez;
    private javax.swing.JTextField txtTelefon;
    // End of variables declaration//GEN-END:variables

    private void prepareForm() throws SQLException, Exception {
        prepareComboBox();

        txtIme.setText(user.getName());
        txtPrez.setText(user.getLastName());
        txtTelefon.setText(user.getPhoneNumber());
        txtAdresa.setText(user.getAddress());
        txtBrojClanskeKarte.setText(user.getUsercard().getCardNumber());
        List<Rent> r = ControllerUI.getInstance().getAllUserRents(user);
        ((TableModelUserRents) tblIznajmljeneKnjige.getModel()).setRents(r);

    }

    private void prepareComboBox() throws Exception {
        List<UserCategory> kategorije = (List<UserCategory>) ControllerUI.getInstance().getUserCategories();
        cmbKategorija.removeAllItems();
        for (UserCategory kategorijaClanova : kategorije) {
            cmbKategorija.addItem(kategorijaClanova);

        }
        cmbKategorija.setSelectedItem((UserCategory) user.getUserCategory());
    }

    private void validateInputs() throws ValidationException {
        Validator.startValidation().validateNotNullOrEmpty(txtIme.getText(), "Popunite polje za ime!").throwIfInvalide();
        Validator.startValidation().validateNotNullOrEmpty(txtPrez.getText(), "Popunite polje za prezime!").throwIfInvalide();
        Validator.startValidation().validateNotNullOrEmpty(txtTelefon.getText(), "Popunite polje za kontakt!").throwIfInvalide();
        Validator.startValidation().validateNotNullOrEmpty(txtAdresa.getText(), "Popunite polje za adresu!").throwIfInvalide();
        Validator.startValidation().validateNotNullOrEmpty(txtBrojClanskeKarte.getText(), "Generisite broj clanske karte!").throwIfInvalide();
        Validator.startValidation().validateFormat(txtAdresa.getText(), "[A-Z,Č,Ć,Š,Đ,Ž][a-z,č,ć,š,đ,ž]+? ([A-Z,Č,Ć,Š,Đ,Ž][a-z,č,ć,š,đ,ž]+? )*[0-9]+?, [0-9]+? [A-Z][a-z]+?", "Format adrese nije podrzan!").throwIfInvalide();

    }
}
